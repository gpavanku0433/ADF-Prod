{
	"name": "dataflow2",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_Employee_DF_source",
						"type": "DatasetReference"
					},
					"name": "employee"
				},
				{
					"dataset": {
						"referenceName": "DS_Department_DF_sink",
						"type": "DatasetReference"
					},
					"name": "Department"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_Empdept_sink_df",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "joinbetweenEmployeeandDepartment"
				},
				{
					"name": "select1"
				},
				{
					"name": "sort1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Empid as string,",
				"          Empname as string,",
				"          Empsalary as string,",
				"          Deptid as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     partitionBy('hash', 1)) ~> employee",
				"source(output(",
				"          Deptid as string,",
				"          Deptname as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     partitionBy('hash', 1)) ~> Department",
				"employee, Department join(employee@Deptid == Department@Deptid,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinbetweenEmployeeandDepartment",
				"joinbetweenEmployeeandDepartment select(mapColumn(",
				"          Empid,",
				"          Empname,",
				"          Empsalary,",
				"          Deptname",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 sort(desc(Empsalary, true),",
				"     partitionBy('hash', 1)) ~> sort1",
				"sort1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Empid as integer,",
				"          Empname as string,",
				"          Empsalary as integer,",
				"          Departmentname as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          Empid,",
				"          Empname,",
				"          Empsalary,",
				"          Departmentname = Deptname",
				"     ),",
				"     partitionBy('hash', 1)) ~> sink1"
			]
		}
	}
}